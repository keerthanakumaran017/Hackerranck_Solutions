import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    public static void minimum_bribe(int [] arr)
    {
        int swapcount=0;
        for(int i=arr.length-1;i>=0;i--)
        {
            if(arr[i]!=i+1)
            {
                if((i-1)>=0 && arr[i-1]==i+1)
                {
                    swapcount++;
                    swap(arr,i,i-1);
                }
                else if((i-2)>=0 && arr[i-2]==i+1)
                {
                    swapcount+=2;
                    swap(arr,i-2,i-1);
                    swap(arr,i-1,i);
                }
                else
                {
                    System.out.println("Too chaotic");
                    return ;
                }
            }
        }
        System.out.println(swapcount);
    }
    public static void swap(int [] arr,int a ,int b)
    {
        int temp=arr[a];
        arr[a]=arr[b];
        arr[b]=temp;
    }
public static void main(String [] args)
{
    Scanner sc=new Scanner(System.in);
    int a=sc.nextInt();
    for(int j=0;j<a;j++)
    {
        int n=sc.nextInt();
        int [] arr=new int[n];
        for(int k=0;k<n;k++)
        {
            arr[k]=sc.nextInt();
        }
        minimum_bribe(arr);

    }

   
}
    
}